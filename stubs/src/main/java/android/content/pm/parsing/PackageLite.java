/*
 * Copyright (C) 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.content.pm.parsing;

import android.annotation.NonNull;
import android.annotation.Nullable;

import java.util.List;

/**
 * Lightweight parsed details about a single package.
 *
 * @hide
 */
public class PackageLite {

    /**
     * Return code path to the base APK file, and split APK files if any.
     */
    public List<String> getAllApkPaths() {
        throw new UnsupportedOperationException("STUB");
    }

    public long getLongVersionCode() {
        throw new UnsupportedOperationException("STUB");
    }

    /**
     * Return if requiredSplitTypes presents in the package.
     */
    private boolean hasAnyRequiredSplitTypes() {
        throw new UnsupportedOperationException("STUB");
    }



    // Code below generated by codegen v1.0.23.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/frameworks/base/core/java/android/content/pm/parsing/PackageLite.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    /**
     * Name of the package as used to identify it in the system
     */
    public @NonNull String getPackageName() {
        throw new UnsupportedOperationException("STUB");
    }

    /**
     * Path where this package was found on disk. For monolithic packages
     * this is path to single base APK file; for cluster packages this is
     * path to the cluster directory.
     */
    public @NonNull String getPath() {
        throw new UnsupportedOperationException("STUB");
    }

    /**
     * Path of base APK
     */
    public @NonNull String getBaseApkPath() {
        throw new UnsupportedOperationException("STUB");
    }

    /**
     * Paths of any split APKs, ordered by parsed splitName
     */
    public @Nullable String[] getSplitApkPaths() {
        throw new UnsupportedOperationException("STUB");
    }

    /**
     * Names of any split APKs, ordered by parsed splitName
     */
    public @Nullable String[] getSplitNames() {
        throw new UnsupportedOperationException("STUB");
    }


    public int getInstallLocation() {
        throw new UnsupportedOperationException("STUB");
    }

}
